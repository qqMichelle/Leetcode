/*
 * Question: Valid Number: Validate if a given string is numeric.
 * Some examples:
 * "0" => true
 * " 0.1 " => true
 * "abc" => false
 * "1 a" => false
 * "2e10" => true
 * Note: It is intended for the problem statement to be ambiguous. You should gather all requirements 
 * up front before implementing one.
*/
public class Solution {
    enum InputType {
                INVALID(0),    // 0
                SPACE(1),      // 1
                SIGN(2),       // 2
                DIGIT(3),      // 3
                DOT(4),        // 4
                EXPONENT(5),   // 5
                NUM_INPUTS(6);  // 6
                
               InputType(int v) {
                    this.value = v;
                }
                int value;
                int getValue() {
                	return this.value;
                }
            }
            public boolean isNumber(String s) {
                // Start typing your Java solution below
                int[][] nfa = {
                {-1,  0,  3,  1,  2, -1},     // next states for state 0
                {-1,  8, -1,  1,  4,  5},     // next states for state 1
                {-1, -1, -1,  4, -1, -1},     // next states for state 2
                {-1, -1, -1,  1,  2, -1},     // next states for state 3
                {-1,  8, -1,  4, -1,  5},     // next states for state 4
                {-1, -1,  6,  7, -1, -1},     // next states for state 5
                {-1, -1, -1,  7, -1, -1},     // next states for state 6
                {-1,  8, -1,  7, -1, -1},     // next states for state 7
                {-1,  8, -1, -1, -1, -1}     // next states for        
                };
                
                int state = 0;
                for (int i = 0; i <  s.length(); ++i) {
                    char c = s.charAt(i);
                    int type = InputType.INVALID.getValue();;
                    if (c >= '0' && c <= '9')
                        type = InputType.DIGIT.getValue();
                     else if (c == ' ')
                        type = InputType.SPACE.getValue();
                    else if (c == '+' || c == '-')
                        type = InputType.SIGN.getValue();
                    else if (c == '.')
                        type = InputType.DOT.getValue();
                    else if (c == 'e' || c == 'E')
                        type = InputType.EXPONENT.getValue();
                    state = nfa[state][type];
                    if (state == -1)
                        return false;
                }
                return state == 1 || state == 4 ||
                        state == 7 || state == 8;
                
            }
            
}   

